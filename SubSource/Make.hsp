//一覧作成――――――――――――――――――――――――――――――――――
*make
	nidPush

	gosub *drawString
	successFlg = FALSE

	VNum = 0
	HNum = 0

	//縦横の画像枚数をカウント
	repeat cellnum(1)+1
		ycnt = cnt
		repeat cellnum(0)+1
			if bufIDPos(cnt, ycnt) >= 100{
				if VNum <= cnt: VNum = cnt
				if HNum <= ycnt: HNum = ycnt
			}
		loop
	loop
	VNum++
	HNum++

	interpolationFlg = listMakeInterpolation && ( ((listMode == LISTMODE_OTHER && directLink) && directLinkDisInterpolation)^1 )

	buffer WND_TEMP1, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
	drawcount = 0
	repeat cellnum(1)+1
		ycnt = cnt
		repeat cellnum(0)+1
			if bufIDPos(cnt, ycnt) >= 100{
				pos cnt*cutRange(CR_W), ycnt*cutRange(CR_H)
				gcopy bufIDPos(cnt, ycnt), cutRange(CR_X) , cutRange(CR_Y), cutRange(CR_W), cutRange(CR_H)
				buffer bufIDPos(cnt, ycnt), 1, 1
				gsel WND_TEMP1
				drawcount++
			} else {
				if (interpolationFlg){
					pos cnt*cutRange(CR_W), ycnt*cutRange(CR_H)
					gcopy WND_KANCOLLEBG, cutRange(CR_X) , cutRange(CR_Y), cutRange(CR_W), cutRange(CR_H)
				}
			}
		loop
	loop

	if (listmode == LISTMODE_FLEET){
		if tuika1 {
			if (nishimuraFlg^1){
				if sosuka | soka{
					gsel WND_TEMP1
					gmode 7

					ccnt = 0
					repeat 6
						xcnt_ = (cnt\3)*2
						ycnt_ = (cnt/3)*3
						if bufIDPos(xcnt_, ycnt_) >= 100{
							pos 205+cutRange(CR_W)*xcnt_, cutRange(CR_H)*ycnt_+5
							gcopy WND_MAKE_STRING, 0, 10+ccnt*70, 220, OSOWm+10
							if addOrderNum {
								ccnt2 = 0
								repeat 6
									xcnt = xcnt_ + cnt\2
									ycnt = ycnt_ + cnt/2
									if bufIDPos(xcnt, ycnt) >= 100{
										pos 205+cutRange(CR_W)*xcnt+210, cutRange(CR_H)*ycnt+5
										gcopy WND_MAKE_STRING, 500+(ccnt*100), 10+ccnt2*OSOW, 50, OSOW
										ccnt2++
									}
								loop
							}
							ccnt++
						}
						if ccnt = 4: break
					loop
				}

				if fleetPunctuation {
					buffer WND_TEMP2, cutRange(CR_W)*VNum+(3*((VNum/2)+(VNum\2)-1)), cutRange(CR_H)*HNum+(3*(HNum/4))
					pos 0, 0
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*2, cutRange(CR_H)*HNum
					pos cutRange(CR_W)*2+3, 0
					gcopy WND_TEMP1, w*2, 0, cutRange(CR_W)*2, cutRange(CR_H)*HNum
					pos cutRange(CR_W)*4+6, 0
					gcopy WND_TEMP1, cutRange(CR_W)*4, 0, cutRange(CR_W)*2, cutRange(CR_H)*HNum
					pos 0, cutRange(CR_H)*3+3
					gcopy WND_TEMP2, 0, cutRange(CR_H)*3, cutRange(CR_W)*6+6, cutRange(CR_H)*3

					color ((PunctuationColor&0x00FF0000)>>16), ((PunctuationColor&0x0000FF00)>>8), (PunctuationColor&0x000000FF)
					boxf 0, cutRange(CR_H)*3, cutRange(CR_W)*6+6, cutRange(CR_H)*3+2
					boxf cutRange(CR_W)*2, 0, cutRange(CR_W)*2+2, cutRange(CR_H)*HNum+3
					boxf cutRange(CR_W)*4+3, 0, cutRange(CR_W)*4+5, cutRange(CR_H)*HNum+3
				} else {
					buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
				}
			} else {
				if sosuka | soka{
					gsel WND_TEMP1
					gmode 7

					ccnt = 0
					repeat 2
						xcnt_ = cnt*2
						ycnt_ = 0
						if bufIDPos(xcnt_, ycnt_) >= 100{
							pos 205+cutRange(CR_W)*xcnt_, cutRange(CR_H)*ycnt_+5
							gcopy WND_MAKE_STRING, 0, 10+ccnt*70, 220, OSOWm+10
							if addOrderNum {
								ccnt2 = 0
								repeat 7
									xcnt = xcnt_ + cnt\2
									ycnt = ycnt_ + cnt/2
									if bufIDPos(xcnt, ycnt) >= 100{
										pos 205+cutRange(CR_W)*xcnt+210, cutRange(CR_H)*ycnt+5
										gcopy WND_MAKE_STRING, 500+(ccnt*100), 10+ccnt2*OSOW, 50, OSOW
										ccnt2++
									}
								loop
							}
							ccnt++
						}
						if ccnt = 4: break
					loop
				}

				if fleetPunctuation {
					buffer WND_TEMP2, cutRange(CR_W)*VNum+(3*((VNum/2)+(VNum\2)-1)), cutRange(CR_H)*HNum
					pos 0, 0
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*2, cutRange(CR_H)*HNum
					pos cutRange(CR_W)*2+3, 0
					gcopy WND_TEMP1, w*2, 0, cutRange(CR_W)*2, cutRange(CR_H)*HNum

					color ((PunctuationColor&0x00FF0000)>>16), ((PunctuationColor&0x0000FF00)>>8), (PunctuationColor&0x000000FF)
					boxf cutRange(CR_W)*2, 0, cutRange(CR_W)*2+2, cutRange(CR_H)*HNum+3
				} else {
					buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
				}
			}
		}

		if tuika4 {
			if (nishimuraFlg^1){
				if sosuka | soka{
					gsel WND_TEMP1
					gmode 7

					ccnt = 0
					repeat 2
						xcnt_ = 0
						ycnt_ = cnt*2
						if bufIDPos(xcnt_, ycnt_) >= 100{
							pos 205+cutRange(CR_W)*xcnt_, cutRange(CR_H)*ycnt_+5
							gcopy WND_MAKE_STRING, 0, 10+ccnt*70, 220, OSOWm+10
							if addOrderNum {
								ccnt2 = 0
								repeat 6
									xcnt = xcnt_ + cnt\3
									ycnt = ycnt_ + cnt/3
									if bufIDPos(xcnt, ycnt) >= 100{
										pos 205+cutRange(CR_W)*xcnt+210, cutRange(CR_H)*ycnt+5
										gcopy WND_MAKE_STRING, 500+(ccnt*100), 10+ccnt2*OSOW, 50, OSOW
										ccnt2++
									}
								loop
							}
							ccnt++
						}
						if ccnt = 4: break
					loop

				}

				if fleetPunctuation {

					buffer WND_TEMP2, cutRange(CR_W)*VNum+((VNum/4)*3), cutRange(CR_H)*HNum+(((HNum+1)/2)-1)*3
					pos 0, 0
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*3, cutRange(CR_H)*HNum
					pos cutRange(CR_W)*3+3, 0
					gcopy WND_TEMP1, cutRange(CR_W)*3, 0, cutRange(CR_W)*3, cutRange(CR_H)*HNum
					pos 0, cutRange(CR_H)*2+3
					gcopy WND_TEMP2, 0, cutRange(CR_H)*2, cutRange(CR_W)*6+3, cutRange(CR_H)*4
					pos 0, cutRange(CR_H)*4+6
					gcopy WND_TEMP2, 0, cutRange(CR_H)*4+3, cutRange(CR_W)*6+3, cutRange(CR_H)*2

					color ((PunctuationColor&0x00FF0000)>>16), ((PunctuationColor&0x0000FF00)>>8), (PunctuationColor&0x000000FF)
					boxf cutRange(CR_W)*3, 0, cutRange(CR_W)*3+2, cutRange(CR_H)*6+6
					boxf 0, cutRange(CR_H)*2, cutRange(CR_W)*6+6, cutRange(CR_H)*2+2
					boxf 0, cutRange(CR_H)*4+3, cutRange(CR_W)*6+6, cutRange(CR_H)*4+5
				} else {
					buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
				}
			} else {
				if sosuka | soka{
					gsel WND_TEMP1
					gmode 7

					ccnt = 0
					repeat 6
						xcnt_ = (cnt\2)*3
						ycnt_ = (cnt/2)*2
						if bufIDPos(xcnt_, ycnt_) >= 100{
							pos 205+cutRange(CR_W)*xcnt_, cutRange(CR_H)*ycnt_+5
							gcopy WND_MAKE_STRING, 0, 10+ccnt*70, 220, OSOWm+10
							if addOrderNum {
								ccnt2 = 0
								repeat 7
									xcnt = xcnt_ + cnt\3
									ycnt = ycnt_ + cnt/3
									if (cnt == 6){
										xcnt = xcnt_ + 3
										ycnt = ycnt_ + 1
									}
									if bufIDPos(xcnt, ycnt) >= 100{
										pos 205+cutRange(CR_W)*xcnt+210, cutRange(CR_H)*ycnt+5
										gcopy WND_MAKE_STRING, 500+(ccnt*100), 10+ccnt2*OSOW, 50, OSOW
										ccnt2++
									}
								loop
							}
							ccnt++
						}
						if ccnt = 4: break
					loop

				}

				if fleetPunctuation {

					buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum+(((HNum+1)/2)-1)*3
					pos 0, 0
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*4, cutRange(CR_H)*HNum
					pos cutRange(CR_W)*3+3, 0
					//gcopy WND_TEMP1, cutRange(CR_W)*3, 0, cutRange(CR_W)*3, cutRange(CR_H)*HNum
					pos 0, cutRange(CR_H)*2+3
					gcopy WND_TEMP2, 0, cutRange(CR_H)*2, cutRange(CR_W)*4, cutRange(CR_H)*4
					pos 0, cutRange(CR_H)*4+6
					//gcopy WND_TEMP2, 0, cutRange(CR_H)*4+3, cutRange(CR_W)*6+3, cutRange(CR_H)*2

					color ((PunctuationColor&0x00FF0000)>>16), ((PunctuationColor&0x0000FF00)>>8), (PunctuationColor&0x000000FF)
					//boxf cutRange(CR_W)*3, 0, cutRange(CR_W)*3+2, cutRange(CR_H)*6+6
					boxf 0, cutRange(CR_H)*2, cutRange(CR_W)*6+6, cutRange(CR_H)*2+2
					//boxf 0, cutRange(CR_H)*4+3, cutRange(CR_W)*6+6, cutRange(CR_H)*4+5
				} else {
					buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
					gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
				}
			}

		}

		if tuika2 {
			//＝＝＝＝
			//＝＝＝＝

			if sosuka | soka {

				gsel WND_TEMP1
				gmode 7

				ccnt = 0
				repeat 6
					xcnt_ = 0
					ycnt_ = cnt
					if bufIDPos(xcnt_, ycnt_) >= 100{
						pos 205+cutRange(CR_W)*xcnt_, cutRange(CR_H)*ycnt_+5
						gcopy WND_MAKE_STRING, 0, 10+ccnt*70, 220, OSOWm+10
						if addOrderNum {
							ccnt2 = 0
							repeat 6
								xcnt = xcnt_ + cnt
								ycnt = ycnt_
								if bufIDPos(xcnt, ycnt) >= 100{
									pos 205+cutRange(CR_W)*xcnt+210, cutRange(CR_H)*ycnt+5
									gcopy WND_MAKE_STRING, 500+(ccnt*100), 10+ccnt2*OSOW, 50, OSOW
									ccnt2++
								}
							loop
						}
						ccnt++
					}
					if ccnt = 4: break
				loop

			}

			if fleetPunctuation {
				buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum+(3*(HNum-1))
				gmode 0
				color ((PunctuationColor&0x00FF0000)>>16), ((PunctuationColor&0x0000FF00)>>8), (PunctuationColor&0x000000FF)
				boxf

				repeat 6
					pos 0, (cnt*cutRange(CR_H))+(cnt*3)
					gcopy WND_TEMP1, 0, cutRange(CR_H)*cnt, cutRange(CR_W)*6, cutRange(CR_H)
				loop
			} else {
				buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
				gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
			}
		}
		if tuika3 {

			if sosuka | soka {
				gsel WND_TEMP1
				gmode 7

				ccnt = 0
				repeat 6
					xcnt_ = cnt
					ycnt_ = 0
					if bufIDPos(xcnt_, ycnt_) >= 100{
						pos 205+cutRange(CR_W)*xcnt_, cutRange(CR_H)*ycnt_+5
						gcopy WND_MAKE_STRING, 0, 10+ccnt*70, 220, OSOWm+10
						if addOrderNum {
							ccnt2 = 0
							repeat 6
								xcnt = xcnt_
								ycnt = ycnt_ + cnt
								if bufIDPos(xcnt, ycnt) >= 100{
									pos 205+cutRange(CR_W)*xcnt+210, cutRange(CR_H)*ycnt+5
									gcopy WND_MAKE_STRING, 500+(ccnt*100), 10+ccnt2*OSOW, 50, OSOW
									ccnt2++
								}
							loop
						}
						ccnt++
					}
					if ccnt = 4: break
				loop
			}

			if fleetPunctuation {
				buffer WND_TEMP2, cutRange(CR_W)*VNum+(3*(VNum-1)), cutRange(CR_H)*HNum
				gmode 0
				color ((PunctuationColor&0x00FF0000)>>16), ((PunctuationColor&0x0000FF00)>>8), (PunctuationColor&0x000000FF)
				boxf

				repeat 6
					pos (cnt*cutRange(CR_W))+(cnt*3), 0
					gcopy WND_TEMP1, cutRange(CR_W)*cnt, 0, cutRange(CR_W), cutRange(CR_H)*6
				loop
			} else {
				buffer WND_TEMP2, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
				gcopy WND_TEMP1, 0, 0, cutRange(CR_W)*VNum, cutRange(CR_H)*HNum
			}
		}
	}

	if senden & (listmode==LISTMODE_FLEET) & (sosuka|soka){
		gsel WND_TEMP2
		gmode 7
		pos ginfo_winx-220, ginfo_winy-14//225
		gcopy WND_MAKE_STRING, 10, 310, 240, 30
	}

	savename = ""
	if drawcount != 0{

		sdim tempstr

		callSaveDiagFlg = FALSE
		if (listmode == LISTMODE_LIST){
			tempstr = DateAndTimeFormat2(saveNameList)
			if (confirmSaveNameList): callSaveDiagFlg = TRUE
		}
		if (listmode == LISTMODE_FLEET){
			tempstr = DateAndTimeFormat2(saveNameFormation)
			if (confirmSaveNameFormation): callSaveDiagFlg = TRUE
		}
		if (listmode == LISTMODE_OTHER){
			if (directLink){
				tempstr = DateAndTimeFormat2(saveNameDirectLink)
				if (confirmSaveNameDirectLink): callSaveDiagFlg = TRUE
			}
			if (airStation){
				tempstr = DateAndTimeFormat2(saveNameAirStation)
				if (confirmSaveNameAirStation): callSaveDiagFlg = TRUE
			}
			if (equipmentList){
				tempstr = DateAndTimeFormat2(SaveNameEquipmentList)
				if (confirmSaveNameEquipmentList): callSaveDiagFlg = TRUE
			}
			if (userDefList){
				tempstr = DateAndTimeFormat2(SaveNameUserDefList)
				if (confirmSaveNameUserDefList): callSaveDiagFlg = TRUE
			}
		}

		if (callSaveDiagFlg){
			SaveFileDialog saveNamePath, "画像ファイル(*.png)|*.png|画像ファイル( *.jpg)|*.jpg", jpgsave+1, tempStr, listSaveDir, strmid(savekind(jpgsave), 1, 3)
			if (stat == FALSE){
				logOut "ファイル保存名が入力されませんでした。"
				nidPop
				return
			}
			savename = getpath(saveNamePath, 8)
		} else {
			savename = tempstr + savekind(jpgsave)
			saveNamePath = listsavedir +"\\"+ savename
		}

		ImgF_ImageSave saveNamePath, jpgquality

		gsel WND_MAIN, 1+frontRow

		if kmexist(saveNamePath) <= 0{
			LogOut savename+"の保存に失敗しました"
		} else {
			successFlg = TRUE
			LogOut savename+"を保存しました"

			picHistoryLoad(saveNamePath)
			gosub *TweetWindow
		}

	} else {
		LogOut "画像が一枚もありません"
	}

	listLoadedNum = 0
	dim bufIDPos, CELL_MAX_W, CELL_MAX_H
	dim loadPicBufID, CELL_MAX_W * CELL_MAX_H

	nidPop

	gosub *draw
return


*listDel
	nidPush
	listLoadedNum = 0
	dim bufIDPos, CELL_MAX_W, CELL_MAX_H
	dim loadPicBufID, CELL_MAX_W * CELL_MAX_H
	gosub *draw
	LogOut "グリッドウィンドウをクリアしました"
	nidPop
return
