#include "hsp3utf.as"

#define global debugLog(%1) ;

#include "./SubSource/FunctionDefinition.hsp"
#include "./SubSource/key.hsp"
#include "./modules/kmodule.as"
#include "./modules/mbase64.as"
#include "./modules/ImageFileModule2.as"
#include "./modules/inimodule2_utf.as"
#include "./modules/BrowseFolder_kai_utf.as"
#include "./modules/TsubuyakiSoup_mod_utf.hsp"
#include "./modules/jsonParse_utf.as"
#include "./modules/listMakerModule.as"
#include "./modules/PerceptualHashMod.as"
#include "./modules/isHomepostModule.as"
#include "./modules/DateAndTimeFormat2.as"
#include "./modules/isfilled.hsp"
#include "./modules/pipe2_utf.hsp"
#include "./modules/MemoryMapModule_utf.as"
#include "./modules/execwMod.as"
#include "./modules/SaveFileDiag_mod.hsp"
#include "./modules/FFMPEGLog.hsp"

#pack "start.ax"
#pack "data2.png"
#pack "huki.png"
#packopt name "艦これ一覧めいかー改二"
#packopt hide 1
#packopt manifest "KanColleListMakerKaini.manifest"
#packopt icon "KanColleListMakerKaini.ico"
#packopt lang "1041"

#define SOFTNAME "一覧めいかー改二 Ver0.3Beta3"
#define klm2ver	3003


#ifdef _debug

	exist "./SubSource/hsptmp"
	if (strsize != -1): delete "./SubSource/hsptmp"
	exist "./SubSource/obj"
	if (strsize != -1): delete "./SubSource/obj"
	exist "./SubSource/packfile"
	if (strsize != -1): delete "./SubSource/packfile"
	
	exist "./modules/hsptmp"
	if (strsize != -1): delete "./modules/hsptmp"
	exist "./modules/obj"
	if (strsize != -1): delete "./modules/obj"
	exist "./modules/packfile"
	if (strsize != -1): delete "./modules/packfile"

	exist "./hsptmp"
	if (strsize != -1): delete "./hsptmp"
	exist "./obj"
	if (strsize != -1): delete "./obj"
	exist "./start.ax"
	if (strsize != -1): delete "./start.ax"
	exist "./packfile"
	if (strsize != -1): delete "./packfile"
	
#endif
	
	onexit gosub *exit
	//onerror gosub *err_

	wndInfoInit
	nidStackInit
	DAControlInit
	isHomeport_init WND_HOME_PORT_MOD

	gosub *DeclaringVariables
	gosub *iniLoad
	gosub *dataCheck
	gosub *iniSave
	gosub *VideoCapSetting
	
	screen WND_MAIN, disInfo(2), disInfo(3), 2:title SOFTNAME
		SET_WND_INFO
		DragAcceptFiles WND_INFO(WND_MAIN, WI_HANDLE), 1
		oncmd gosub *MainWindowProc, WM_DROPFILES
		oncmd gosub *MainWindowProc, WM_COMMAND
		oncmd gosub *MainWindowProc, WM_HOTKEY
		oncmd gosub *MainWindowProc, WM_TIMER
		oncmd gosub *MainWindowProc, WM_VSCROLL
		oncmd gosub *MainWindowProc, WM_DPICHANGED
		oncmd gosub *MainWindowProc, WM_LBUTTONDOWN
		oncmd gosub *MainWindowProc, WM_LBUTTONDBLCLK
		objmode 2
		
		combox dummy, 100, "  SSキャプチャモード\n  艦娘一覧モード\n  攻略編成モード\n  その他一覧作成モード\n  オプション"
		comboxId = stat
		hCombox = objinfo_hwnd(comboxId)
		
		combox dummy, 100, " 環境設定\n キャプチャ・作成設定\n 動画キャプチャ設定\n Twitter設定\n その他設定"
		optionCBId = stat
		hOptionComBox = objinfo(optionCBId, 2)

		chkbox "dummy", dummy
	
	screen WND_GRID, disInfo(2), disInfo(3), 2:title "表示させたいセルにD&D"
		SET_WND_INFO
		DragAcceptFiles WND_INFO(WND_GRID, WI_HANDLE), 1
		oncmd gosub *GridWindowProc, WM_DROPFILES
		oncmd gosub *GridWindowProc, WM_SIZING
		oncmd gosub *GridWindowProc, WM_LBUTTONDOWN
		//oncmd gosub *ListRelocation, WM_RBUTTONDOWN
		framesx = ginfo_sizex - ginfo_winx
		framesy = ginfo_sizey - ginfo_winy
		kmmouse_init

	//範囲選択用レイヤードウィンドウ
	bgscr WND_OVERLAY, disInfo(2), disInfo(3), 2
		SET_WND_INFO
		color 0,255,0
		boxf
		GetWindowLong WND_INFO(WND_OVERLAY, WI_HANDLE),-20
		SetWindowLong WND_INFO(WND_OVERLAY, WI_HANDLE),-20, stat | $80000
		SetLayeredWindowAttributes WND_INFO(WND_OVERLAY, WI_HANDLE), 0x00000000, 128, LWA_ALPHA

	buffer WND_MAKE_STRING, 1000, 340
		SET_WND_INFO		
		gosub *drawString

	bgscr WND_SUPPORT, 850, 100, 2
		SET_WND_INFO
		GetWindowLong WND_INFO(WND_SUPPORT, WI_HANDLE),-20
		SetWindowLong WND_INFO(WND_SUPPORT, WI_HANDLE),-20, stat | $80000
		SetLayeredWindowAttributes WND_INFO(WND_SUPPORT, WI_HANDLE), 0x000000FF, 255, LWA_COLORKEY
		gosub *DrawSupportWnd
		
	//画像読み込み用
	buffer WND_IMAGE_BUF
		SET_WND_INFO
		ImgF_PicloadEx "data2.png"

	bgscr WND_IMAGE_BUF2,,,2
		SET_WND_INFO
		ImgF_PicloadEx "huki.png"
		GetWindowLong WND_INFO(WND_IMAGE_BUF2, WI_HANDLE),-20
		SetWindowLong WND_INFO(WND_IMAGE_BUF2, WI_HANDLE),-20, stat | $80000
		SetLayeredWindowAttributes WND_INFO(WND_IMAGE_BUF2, WI_HANDLE), 0x000000FF, 192, LWA_COLORKEY | LWA_ALPHA
		imageBuf2W = ginfo_winx
		imageBuf2H = ginfo_winy
		gsel WND_IMAGE_BUF2, -1
		
	buffer WND_GRID_STRING ,640,150
		SET_WND_INFO
		syscolor 16
		font "メイリオ", 25, 1
		mes "スクリーンショットをここにドラッグアンドドロップ"
		mes "またはホットキー(Altキー＋Zキー同時押し)で
		mes "                                         画像を追加してください"
		mes "セルの画像はウィンドウ外にドラッグで消去できます"
		//640,150
	
	screen WND_TWITTER, disInfo(2), disInfo(3), 2 | 4
		SET_WND_INFO
		oncmd gosub *TweetWindowProc, WM_LBUTTONDOWN
		oncmd gosub *TweetWindowProc, WM_MOUSEMOVE
		oncmd gosub *TweetWindowProc, WM_COMMAND
		oncmd gosub *TweetWindowProc, WM_DROPFILES

	MakeFFMPEGLogWindow WND_FFMPEG

	buffer WND_TWIBUF, 2400, 1440
		SET_WND_INFO
	buffer WND_TWIBUF1, 2400, 1440
		SET_WND_INFO
	buffer WND_TWIBUF2, 2400, 1440
		SET_WND_INFO
	buffer WND_TWIBUF3, 2400, 1440
		SET_WND_INFO
	buffer WND_TWIBUF4, 2400, 1440
		SET_WND_INFO

	buffer WND_NOIMAGE, 800, 480
		SET_WND_INFO
		color
		boxf
		color 255, 255, 255
		boxf 8, 8, 791, 471
		color
		font "メイリオ", 130
		pos 100, 150
		mes "No image"

	gsel WND_MAIN

	gosub *loadHistory
	gosub *calcUIScale
	gosub *twiInit
	gosub *drawMainWindow
	gosub *hotkeyCapSetting
	gsel WND_MAIN,1+frontRow

	if enableTweetWindow {
		gsel WND_TWITTER, 1+twiFrontRow
		gsel WND_MAIN, 1+frontRow
	}

	if initialActivation {
		dialog "艦これ一覧めいかー改二へようこそ！\n自動バージョンチェック機能を有効にしますか？\n※設定からいつでも切り替えができます", 2, "初回起動"
		if (stat != 6){
			autoVersionCheck = FALSE
		}
	}

	gosub *VerCheck

	if autoSearch {
	} else {
		if ((SSCap_temp(2)-SSCap_temp(0)) != 0) | ((SSCap_temp(3)-SSCap_temp(1)) != 0){
			gsel WND_OVERLAY, 1
			MoveWindow WND_INFO(WND_OVERLAY, WI_HANDLE), SSCap_temp(0), SSCap_temp(1), SSCap_temp(2)-SSCap_temp(0), SSCap_temp(3)-SSCap_temp(1), 1
			await
			gsel WND_MAIN
			dialog "前回起動時の座標を取得しました。\n復元しますか？", 2
			dialogStat = stat
			gsel WND_OVERLAY, -1
			gsel WND_MAIN, 1+frontrow
			if (dialogStat == 6){
				repeat 4
					SSCap(cnt) = SSCap_temp(cnt)
				loop
				gosub *CaptureMethodDecide
				gosub *SSSettingCheck
			}
		}
	}

#ifdef _debug
	ShowFFMPEGLog
#endif

	
	//SetTimer WND_INFO(WND_MAIN, WI_HANDLE), timer2ID, 1000, 0
	/*
	mode = MODE_OPTION
	optionMode = OPMODE_CAPTURE
	gosub *drawMainWindow
	//*/

	
	stop


*exit

	if (wparam == WND_GRID){
		mode = MODE_SSCAP
		IsIconicFlg = FALSE
		if (IsIconic(WND_INFO(WMD_MAIN, WI_HANDLE)) != 0){
			ShowWindow WND_INFO(WMD_MAIN, WI_HANDLE), SW_RESTORE
			IsIconicFlg = TRUE
		}
		gosub *drawMainWindow
		gsel WND_MAIN, 1+frontRow
		objprm comboxid, 0
		if (IsIconicFlg){
			ShowWindow WND_INFO(WMD_MAIN, WI_HANDLE), SW_MINIMIZE
		}
		return
	}
	
	if (wparam == WND_TWITTER){
		gsel WND_TWITTER, -1
		enableTweetWindow = FALSE
		gsel WND_MAIN, 1+frontRow
		if (mode != MODE_OPTION){
			objprm enabletweetwindowcid, 0
		} 
		return
	}
	
	if (confirmCompletion && iparam == 0){
		//iparamが1のときはシャットダウンなので確認せずに終了する
		dialog "艦これ一覧めいかー改二を終了しますか？", 2, "終了確認"
		if (stat != 6):return
	}

	onexit 0
	onerror 0

	if videoCapFlg: gosub *VideoCap

	if hdcScreen: DeleteDC hdcScreen
	if dcClient: ReleaseDC dcClient
	
	DragAcceptFiles WND_INFO(WND_GRID, WI_HANDLE), 0
	DragAcceptFiles WND_INFO(WND_MAIN, WI_HANDLE), 0
	DragAcceptFiles WND_INFO(WND_TWITTER, WI_HANDLE), 0

	if (seqCapF == TRUE){
		KillTimer WND_INFO(WND_MAIN, WI_HANDLE), timerID
	}

	//KillTimer WND_INFO(WND_MAIN, WI_HANDLE), timer2ID

	if (hotkeySet == TRUE) {
		UnregisterHotKey WND_INFO(WND_MAIN, WI_HANDLE), HOTKEYID
	}
	
	gosub *dataCheck
	gosub *iniSave
		
	end
	end

*err_
	onerror 0
	dialog "エラー番号"+wparam+"\n"+lparam+"行目"
	pipe2term vpid
	pipe2term apid
	pipe2term mpid
	gosub *exit

#include "./SubSource/DeclaringVariables.hsp"
#include "./SubSource/DrawWindow.hsp"
#include "./SubSource/iniFileOperation.hsp"
#include "./SubSource/TwitterOperation.hsp"
#include "./SubSource/DrawString.hsp"
#include "./SubSource/Make.hsp"
#include "./SubSource/GetPosition.hsp"
#include "./SubSource/VersionCheck.hsp"
#include "./SubSource/OptionSetting.hsp"
#include "./SubSource/WindowMessageEvent.hsp"
#include "./SubSource/Capture.hsp"
#include "./SubSource/GridWindowOperation.hsp"
#include "./SubSource/VideoCapture.hsp"